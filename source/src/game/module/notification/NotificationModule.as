package src.game.module.notification{	import caurina.transitions.Tweener;	import net.fpp.starling.module.AModule;	import rv2.sound.SoundHandler;	import src.game.module.notification.constant.CNotification;	import src.game.module.notification.view.NotificationView;	public class NotificationModule extends AModule	{		private static const MARGIN_LEFT:Number = 10;		private static const MARGIN_TOP:Number = 45;		private static const NOTIFICATION_HEIGHT:Number = 30;		private static const NOTIFICATION_GAP:Number = 5;		private var _list:Vector.<NotificationView> = new <NotificationView>[];		public function NotificationModule():void		{		}		public function add( type:String ):void		{			SoundHandler.play( 'SND_FLIP' );			var notificationView:NotificationView = new NotificationView( remove );			switch( type )			{				case CNotification.FRONT_FLIP:					notificationView.setImage( 'notification_front_flip' );					break;				case CNotification.BACK_FLIP:					notificationView.setImage( 'notification_back_flip' );					break;				case CNotification.NICE_AIR:					notificationView.setImage( 'notification_nice_airtime' );					break;				case CNotification.NICE_WHEELIE:					notificationView.setImage( 'notification_nice_wheelie' );					break;			}			notificationView.show();			setStartPositionOfNotificationView( notificationView );			_list.push( notificationView );			addChild( notificationView );		}		public function remove( view:NotificationView ):void		{			var length:int = _list.length;			for( var i:int = 0; i < length; i++ )			{				if( _list[ i ] == view )				{					_list[ i ].removeFromParent( true );					_list[ i ] = null;					_list.splice( i, 1 );					break;				}			}			updatePositions();		}		private function updatePositions():void		{			var length:int = _list.length;			for( var i:int = 0; i < length; i++ )			{				setyPositionOfNotificationViewWithAnimation( i, _list[ i ] );			}		}		private function setStartPositionOfNotificationView( notificationView:NotificationView ):void		{			notificationView.x = MARGIN_LEFT;			notificationView.y = MARGIN_TOP + _list.length * NOTIFICATION_HEIGHT + _list.length * NOTIFICATION_GAP;		}		private function setyPositionOfNotificationViewWithAnimation( index:int, notificationView:NotificationView ):void		{			Tweener.removeTweens( notificationView );			Tweener.addTween( notificationView, {				time: .5,				y: MARGIN_TOP + index * NOTIFICATION_HEIGHT + index * NOTIFICATION_GAP			} )		}		override public function dispose():void		{			var length:int = _list.length;			for( var i:int = 0; i < length; i++ )			{				_list[ i ].removeFromParent( true );				_list[ i ] = null;			}			_list.length = 0;			_list = null;			super.dispose();		}	}}