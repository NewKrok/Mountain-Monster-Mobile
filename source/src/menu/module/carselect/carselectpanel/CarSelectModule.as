package src.menu.module.carselect.carselectpanel{	import net.fpp.starling.StaticAssetManager;	import src.assets.Fonts;	import src.assets.RuntimeTextures;	import src.constant.CStarRequireds;	import src.data.DataManager;	import src.events.BaseModuleEvent;	import starling.display.Button;	import starling.display.Image;	import starling.display.Sprite;	import starling.events.Event;	public class CarSelectModule extends Sprite	{		private var _carlist:CarList;		private var _back:Image;		private var _backButton:Button;		public function CarSelectModule():void		{			addEventListener( Event.ADDED_TO_STAGE, loaded );		}		private function loaded( event:Event ):void		{			removeEventListener( Event.ADDED_TO_STAGE, loaded );			this._back = new Image ( RuntimeTextures.DARK_RECTANGLE );			this._back.width = this.stage.stageWidth;			this._back.height = this.stage.stageHeight;			this._back.alpha = .8;			this.addChild( this._back );			this.unlockAvailableCars();			addChild( _carlist = new CarList( stage.stageWidth ) );			_carlist.y = height / 2 - _carlist.height / 2 - 40;			addChild( _backButton = new Button( StaticAssetManager.instance.getTexture( "base_button" ), 'CLOSE' ) );			_backButton.fontName = Fonts.getAachenLightFont().name;			_backButton.fontSize = 18;			_backButton.fontColor = 0xFFFFFF;			_backButton.x = stage.stageWidth / 2 - _backButton.width / 2;			_backButton.y = stage.stageHeight - _backButton.height - 10;			_backButton.addEventListener( Event.TRIGGERED, backToMapRequest );		}		private function unlockAvailableCars():void		{			var allEarnedStarCount:int = DataManager.getAllEarnedStarCount();			if ( allEarnedStarCount >= CStarRequireds.UNLOCK_CAR_TYPE_1 )			{				DataManager.unlockCar( 1 );			}			if ( allEarnedStarCount >= CStarRequireds.UNLOCK_CAR_TYPE_2 )			{				DataManager.unlockCar( 2 );			}			if ( allEarnedStarCount >= CStarRequireds.UNLOCK_CAR_TYPE_3 )			{				DataManager.unlockCar( 3 );			}		}		private function backToMapRequest( event:Event ):void		{			this.dispatchEvent( new BaseModuleEvent( BaseModuleEvent.DISPOSE_REQUEST ) );		}		public function unlockCar( carId:uint ):void		{			this._carlist.unlockCar( carId );		}		override public function dispose():void		{			this._carlist.removeFromParent( true );			this._carlist = null;			this._back.removeFromParent( true );			this._back = null;			this._backButton.removeEventListener( Event.TRIGGERED, backToMapRequest );			this._backButton.removeFromParent( true );			this._backButton = null;			super.dispose();		}	}}